@use 'sass:map';
@use 'sass:meta';

@function -flatten($map, $prefix: '') {
  $output: ();
  @each $x, $y in $map {
    @if meta.type-of($y) == 'map' {
      $output: map.merge($output, -flatten($y, $prefix + '-' + $x));
    } @else {
      $output: map.merge(
        $output,
        (
          '--theme#{$prefix}-#{$x}': $y,
        )
      );
    }
  }
  @return $output;
}

@mixin styles($name, $theme) {
  .theme--#{$name} {
    @each $x, $y in -flatten($theme) {
      #{$x}: #{$y};
    }

    background-color: var(--theme-surface);
    color: var(--theme-text-primary);

    a {
      color: var(--theme-text-link);
    }

    // v-- these are the "opacity-helpers"
    @each $variant in ('primary', 'secondary', 'disabled') {
      .text--#{$variant} {
        color: var(--theme-text-#{$variant});
      }
    }
    // ^--
    @each $variant in ('primary', 'secondary', 'success', 'info', 'warning', 'error') {
      .#{$variant}-color {
        background-color: var(--theme-colors-#{$variant}) !important;
        border-color: var(--theme-colors-#{$variant}) !important;
      }
      .#{$variant}-text {
        color: var(--theme-colors-#{$variant}) !important;
        caret-color: var(--theme-colors-#{$variant}) !important;
      }
    }
  }
}
