@use '../../styles/config/config-loader' as config;

.s-alert {
  display: block;
  font-size: config.get('components', 'Alert', 'font-size');
  margin-bottom: config.get('components', 'Alert', 'margin');
  padding: config.get('components', 'Alert', 'padding');
  position: relative;
  color: var(--theme-text-primary);

  // @include has-theme-bg {
  //   color: map-deep-get($material-dark-theme, 'text', 'primary');
  // }

  .s-icon,
  .s-btn {
    color: inherit !important;
  }

  .s-icon {
    align-self: flex-start;
  }

  // [slot='icon'] {
  //   margin-right: $spacer * 4;
  // }

  .s-alert__border {
    border-style: solid;
    border-width: config.get('components', 'Alert', 'border-width');
    content: '';
    position: absolute;

    &.border-left,
    &.border-right {
      bottom: 0;
      top: 0;
    }

    &.border-bottom,
    &.border-top {
      left: 0;
      right: 0;
    }

    &.border-left {
      border-top-left-radius: inherit;
      border-bottom-left-radius: inherit;
      left: 0;
    }

    &.border-right {
      border-top-right-radius: inherit;
      border-bottom-right-radius: inherit;
      right: 0;
    }

    &.border-top {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
      top: 0;
    }

    &.border-bottom {
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
      bottom: 0;
    }
  }

  &.dense {
    padding-top: config.get('components', 'Alert', 'padding') / 2;
    padding-bottom: config.get('components', 'Alert', 'padding') / 2;

    .s-alert__border {
      border-width: config.get('components', 'Alert', 'border-width-dense');
    }
  }

  &.outlined {
    background: transparent;
    border: config.get('components', 'Alert', 'outline');
  }

  &.text {
    background: transparent !important;

    &::before {
      background-color: currentColor;
      border-radius: inherit;
      bottom: 0;
      content: '';
      left: 0;
      opacity: 0.12;
      position: absolute;
      pointer-events: none;
      right: 0;
      top: 0;
    }
  }

  &:not(.tile) {
    border-radius: config.get('components', 'Alert', 'border-radius');
  }

  &.colored-border {
    @include elevation(2);
  }

  &:not(.colored-border) {
    .s-alert__border {
      opacity: config.get('components', 'Alert', 'border-opacity');
    }
  }
}

.s-alert__wrapper {
  align-items: center;
  border-radius: inherit;
  display: flex;
}

.s-alert__content {
  flex: 1 1 auto;
}
